#include <SoftwareSerial.h>
#include <TinyGPS.h>

#include <SD.h>
#include <SPI.h>

SoftwareSerial BTSerial(4, 5);  // 블루투스 통신

#define RXPIN 7
#define TXPIN 8
#define GPSBAUD 9600

TinyGPS gps; 
SoftwareSerial uart_gps(RXPIN, TXPIN);  // 실제 RX =6, TX= 5

void getgps(TinyGPS &gps);

long TP_init();

File myFile; // GPS
File my2File; // 진동수

static int vibr_Pin =0; // 진동 핀 0번
static int REC = 3; // 녹음 핀 3번
static int PLAYE = 2; // 재생 핀 2번

char data; // 블루투스 데이터
int state = -1; // 상태변수
int m = 0; // 진동 값
int c;

bool bstate=0;




void setup() {
  Serial.begin(9600);
  
  BTSerial.begin(9600);
  uart_gps.begin(GPSBAUD);
  pinMode(vibr_Pin, INPUT); // 진동핀 입력으로 놓음
  pinMode(REC, OUTPUT); // 녹음핀 출력으로
  pinMode(PLAYE, OUTPUT); // 재생핀 출력으로
  pinMode(10, OUTPUT); // 10번핀 출력으로 10번핀= SD카드에 사용하는 핀
  
  
  Serial.println("*********command*********");  // [1. 녹음10초] [2. 재생] [3. 정지] [4. gps] [5. vibration]
  Serial.println("[1. record]");
  Serial.println("[2. play]");
  Serial.println("[3. stop]");
  Serial.println("[4. gps] ");
  Serial.println("[5. vibration]");
  
  

 if(!SD.begin(6)){
    return;
   }
}

void loop() {

  
    if(BTSerial.available())
    {
      
      data = BTSerial.read(); 
    }

    if(BTSerial.available())
    {
    if (data == '1') {  // 녹음
      state = 3;
      bstate=0;
       digitalWrite(REC,HIGH);
       Serial.println("REC...");
    
    } 
    
    else if (data == '2') {  // 재생
      state = 4;
      bstate=0;
      digitalWrite(PLAYE,HIGH);
      Serial.println("PLAYE...");
      
    } 
    
    else if(data == '3') { // 정지
      state = 0;
      bstate=0;
      digitalWrite(REC,LOW);
      digitalWrite(PLAYE,LOW);
      Serial.println("STOP...");
      
    }
    
    else if(data == '4') { // GPS
      state =1;
      bstate=1;
    }
  
    else if(data == '5') { // 진동수
     vib();
     bstate=0;
     Serial.print("measurment = ");
     Serial.println(m);

    
    my2File = SD.open("VIB_TEMP.txt", FILE_WRITE);
    if(my2File){
    vib();
    my2File.print("measurement = ");
    my2File.println(m);
    my2File.close();
     }
    }
    }
   
    
   

   if(bstate!=0 ){
    uart_gps.listen();
    loop2();
   }
   else {
    BTSerial.listen();
    long measurement = TP_init();
   }

}


void loop2() {
  
  while(uart_gps.available())  
  {
       c = uart_gps.read();    // load the data into a variable...
      if(gps.encode(c))   
      {  // if there is a new valid sentence...
       
        getgps(gps);         // then grab the data.
      }
    }

}
void vib() {
  state = 2;
}


long TP_init(){
  long measurement=pulseIn (vibr_Pin, HIGH);
  if(measurement>100)
  m++;
  return m;
}


void getgps(TinyGPS &gps)
{
  int year;
  byte month, day, hour, minute, second, hundredths;
  float latitude, longitude;
  // 년도, 월, 날짜, 시, 분, 초, 위도, 경도 등을 저장할 변수 선언

  gps.f_get_position(&latitude, &longitude); // 위도, 경도를 파싱하여 변수에 저장
  gps.crack_datetime(&year,&month,&day,&hour,&minute,&second,&hundredths); 
  // 년도, 월, 날짜, 시, 분, 초를 파싱하여 변수에 저장

  hour = hour + 9;
  // 한국의 시간은 GMT+9 이므로 시간에 9시간을 더함

  if (hour>24){
  hour = hour -24;
  day = day +1;
  }
  // 계산한 시간의 값이 24를 초과했다면
  // 시간 값에서 24를 빼고
  // 날짜 값에서 1을 더함
  
  
   
  Serial.print(" <trkpt lat=\"");
  Serial.print(latitude,6); 
  Serial.print("\" lon=\"");
  Serial.print(longitude,6);
  Serial.println("\">");
  Serial.println(" <ele></ele>");

  Serial.print("   <time>");
  Serial.print(year);
  Serial.print("-"); 
  Serial.print(month); 
  Serial.print("-"); 
  Serial.print(day); 
  Serial.print("T"); 
  Serial.print(hour); 
  Serial.print(minute < 10 ? ":0":":"); 
  Serial.print(minute); 
  Serial.print(second < 10 ? ":0":":"); 
  Serial.print(second); 
  Serial.println("Z</time>");

  Serial.println("   </trkpt>");
  
// GPX파일 형식으로 파일을 쓴다.
  
 
    
  delay(5000);

}